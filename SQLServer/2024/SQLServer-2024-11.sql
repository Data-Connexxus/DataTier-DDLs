-- REFERENCE DATA TABLES
DROP TABLE IF EXISTS REFDATA_APPLICATIONS;
CREATE TABLE REFDATA_APPLICATIONS
(
    APP_GUID               CHAR(38) DEFAULT NEWID() NOT NULL,
    APPLICATION_CUSTOMCODE VARCHAR(15),
    APPLICATION_DESC       VARCHAR(50),
    CREATED_USER           VARCHAR(20),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    VENDOR_ID              CHAR(38),
    INDUSTRY_OID           VARCHAR(49),
    ORGANIZATION_GUID      CHAR(38),
    PRIMARY KEY (APP_GUID)
);

DROP TABLE IF EXISTS REFDATA_CODESETS;
CREATE TABLE REFDATA_CODESETS
(
    CODESETS_ID        CHAR(38) DEFAULT NEWID() NOT NULL,
    CODESET_NAME       VARCHAR(50),
    INDUSTRY_STD       VARCHAR(6),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    CREATED_USER       VARCHAR(20),
    FIELD_MAPPING      VARCHAR(40),
    SENSITIVITYFLAG_ID VARCHAR(5),
    EXTERNALTABLE_ID   VARCHAR(20),
    EXTERNAL_NOTES     VARCHAR(149),
    EXTERNAL_LINK      VARCHAR(99),
    PRIMARY KEY (CODESETS_ID)
);

DROP TABLE IF EXISTS REFDATA_DATAATTRIBUTES;
CREATE TABLE REFDATA_DATAATTRIBUTES
(
    DATAATTRIBUTE_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    DATAATTRIBUTE_NAME         VARCHAR(50),
    SENSITIVITYFLAG_ID         VARCHAR(5),
    CREATED_DATE              DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID                  VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER               VARCHAR(20),
    REGISTEREDAPP_GUID             CHAR(38),
    ATTRIBUTE_TYPE              VARCHAR(10),
    PRIMARY KEY (DATAATTRIBUTE_ID)
);

DROP TABLE IF EXISTS REFDATA_DATASTRUCTURES;
CREATE TABLE REFDATA_DATASTRUCTURES
(
    DATASTRUCTURE_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    DATASTRUCTURE_NAME          VARCHAR(50),
    SENSITIVITYFLAG_ID          VARCHAR(5),
    CREATED_DATE                DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID                   VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER                VARCHAR(20),
    REGISTEREDAPP_GUID              CHAR(38),
    PRIMARY KEY (DATASTRUCTURE_ID)
);

DROP TABLE IF EXISTS REFDATA_DEVICETYPES;
CREATE TABLE REFDATA_DEVICETYPES
(
    DEVICETYPE_ID CHAR(38) DEFAULT NEWID() NOT NULL,
    DEVICETYPE    VARCHAR(30),
    CREATED_DATE  DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID     VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (DEVICETYPE_ID)
);

DROP TABLE IF EXISTS REFDATA_INDUSTRIES;
CREATE TABLE REFDATA_INDUSTRIES
(
    INDUSTRY_ID   CHAR(38) DEFAULT NEWID() NOT NULL,
    INDUSTRY_NAME VARCHAR(45),
    CREATED_DATE  DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID    VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (INDUSTRY_ID)
);

DROP TABLE IF EXISTS REFDATA_INDUSTRIES_BUSINESS;
CREATE TABLE REFDATA_INDUSTRIES_BUSINESS
(
    INDUSTRYTOBUSINESS_ID CHAR(38) DEFAULT NEWID() NOT NULL,
    INDUSTRY_ID           CHAR(38),
    BUSINESS_AREA          VARCHAR(50),
    CREATED_DATE          DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID             VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (INDUSTRYTOBUSINESS_ID)
);

DROP TABLE IF EXISTS REFDATA_INDUSTRYSTDS;
CREATE TABLE REFDATA_INDUSTRYSTDS
(
    INDUSTRY_STD     VARCHAR(6) NOT NULL,
    INDUSTRYSTD_DESC VARCHAR(30),
    CREATED_DATE     DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID        VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (INDUSTRY_STD)
);

DROP TABLE IF EXISTS REFDATA_INDUSTRYSTDS_EVENTTYPES;
CREATE TABLE REFDATA_INDUSTRYSTDS_EVENTTYPES
(
    EVENTTYPE_ID     VARCHAR(10) NOT NULL,
    EVENTTYPE_DESC VARCHAR(30),
    INDUSTRY_STD     VARCHAR(6),
    CREATED_DATE    DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID       VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (EVENTTYPE_ID)
);

DROP TABLE IF EXISTS REFDATA_LEGALENTITIES;
CREATE TABLE REFDATA_LEGALENTITIES
(
    LEGALENTITY_GUID CHAR(38) DEFAULT NEWID() NOT NULL,
    LOCATION_NAME    VARCHAR(50),
    ADDRESS          VARCHAR(75),
    CITY             VARCHAR(60),
    STATE_ID         VARCHAR(2),
    ZIPCODE          VARCHAR(12),
    CREATED_USER     VARCHAR(20),
    STATUS_ID        VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE     DATETIME DEFAULT (GETUTCDATE()),
    LOCATION_URL     VARCHAR(99),
    LOCATION_PHONE   VARCHAR(12),
    PRIMARY KEY (LEGALENTITY_GUID)
);

DROP TABLE IF EXISTS REFDATA_OPERATIONTYPES;
CREATE TABLE REFDATA_OPERATIONTYPES
(
    OPERATIONTYPE_ID   VARCHAR(7) NOT NULL,
    OPERATIONTYPE_NAME VARCHAR(60),
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (OPERATIONTYPE_ID)
);

DROP TABLE IF EXISTS REFDATA_ORGANIZATIONS;
CREATE TABLE REFDATA_ORGANIZATIONS
(
    ORGANIZATION_GUID          CHAR(38) DEFAULT NEWID() NOT NULL,
    ORGANIZATION_INTERNAL_CODE VARCHAR(10),
    ORGANIZATION_INTERNAL_ID   VARCHAR(10),
    ORGANIZATION_NAME          VARCHAR(50),
    ADDRESS                    VARCHAR(75),
    CITY                       VARCHAR(60),
    STATE_ID                   VARCHAR(2),
    ZIPCODE                    VARCHAR(12),
    CREATED_USER               VARCHAR(20),
    STATUS_ID                  VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE               DATETIME DEFAULT (GETUTCDATE()),
    LEGALENTITY_GUID           CHAR(38),
    PRIMARY KEY (ORGANIZATION_GUID)
);

DROP TABLE IF EXISTS REFDATA_PROFESSIONTYPES;
CREATE TABLE REFDATA_PROFESSIONTYPES
(
    PROFESSIONTYPE_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    PROFESSIONTYPENAME VARCHAR(65),
    CREATED_USER        VARCHAR(20),
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (PROFESSIONTYPE_ID)
);

DROP TABLE IF EXISTS REFDATA_RULESETS;
CREATE TABLE REFDATA_RULESETS
(
    RULE_ID        CHAR(38) DEFAULT NEWID() NOT NULL,
    RULE_NAME      VARCHAR(65),
    CREATED_USER   VARCHAR(20),
    CREATED_DATE   DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID      VARCHAR(10) DEFAULT 'ACTIVE',
    EXPIRATION_DATE DATETIME,
    PRIMARY KEY (RULE_ID)
);

DROP TABLE IF EXISTS REFDATA_SENSITIVITYFLAGS;
CREATE TABLE REFDATA_SENSITIVITYFLAGS
(
    SENSITIVITYFLAG_ID   VARCHAR(5) NOT NULL,
    SENSITIVITYFLAG_DESC VARCHAR(60),
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (SENSITIVITYFLAG_ID)
);

DROP TABLE IF EXISTS REFDATA_STATUS;
CREATE TABLE REFDATA_STATUS
(
    STATUS_ID          VARCHAR(10) NOT NULL,
    STATUS_DESCRIPTION VARCHAR(45) NOT NULL,
    CREATED_DATE       DATETIME,
    CREATED_USER       VARCHAR(20),
    PRIMARY KEY (STATUS_ID)
);

DROP TABLE IF EXISTS REFDATA_TERMINOLOGYSTDS;
CREATE TABLE REFDATA_TERMINOLOGYSTDS
(
    TERMINOLOGY_STD         VARCHAR(25) NOT NULL,
    TERMINOLOGYSTD_VERSION VARCHAR(10) NOT NULL,
    TERMINOLOGYSTD_DESC    VARCHAR(129),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (TERMINOLOGY_STD)
);

DROP TABLE IF EXISTS REFDATA_TIMEZONES;
CREATE TABLE REFDATA_TIMEZONES
(
    TIMEZONE_VALUE VARCHAR(3) NOT NULL,
    TIMEZONE_DESC  VARCHAR(25),
    CREATED_DATE   DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID      VARCHAR(10) DEFAULT 'ACTIVE',
    PRIMARY KEY (TIMEZONE_VALUE)
);

DROP TABLE IF EXISTS REFDATA_USSTATES;
CREATE TABLE REFDATA_USSTATES
(
    STATE_ID          VARCHAR(2) NOT NULL,
    STATE_DESCRIPTION VARCHAR(65),
    LATTITUDE         VARCHAR(12),
    LONGITUDE         VARCHAR(12),
    CREATED_DATE      DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID         VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER      VARCHAR(20),
    PRIMARY KEY (STATE_ID)
);

DROP TABLE IF EXISTS REFDATA_VENDORS;
CREATE TABLE REFDATA_VENDORS
(
    VENDOR_ID    CHAR(38) DEFAULT NEWID() NOT NULL,
    VENDOR_NAME   VARCHAR(50),
    CREATED_DATE DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID    VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER  VARCHAR(20),
    PRIMARY KEY (VENDOR_ID)
);

ALTER TABLE REFDATA_APPLICATIONS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_APPLICATIONS
    ADD FOREIGN KEY (VENDOR_ID)
        REFERENCES REFDATA_VENDORS (VENDOR_ID);

ALTER TABLE REFDATA_APPLICATIONS
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE REFDATA_CODESETS
    ADD FOREIGN KEY (INDUSTRY_STD)
        REFERENCES REFDATA_INDUSTRYSTDS (INDUSTRY_STD);

ALTER TABLE REFDATA_CODESETS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_CODESETS
    ADD FOREIGN KEY (SENSITIVITYFLAG_ID)
        REFERENCES REFDATA_SENSITIVITYFLAGS (SENSITIVITYFLAG_ID);

ALTER TABLE REFDATA_DATAATTRIBUTES
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_DATAATTRIBUTES
    ADD FOREIGN KEY (SENSITIVITYFLAG_ID)
        REFERENCES REFDATA_SENSITIVITYFLAGS (SENSITIVITYFLAG_ID);

ALTER TABLE REFDATA_DATAATTRIBUTES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE REFDATA_DATASTRUCTIRES
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_DATASTRUCTURES
    ADD FOREIGN KEY (SENSITIVITYFLAG_ID)
        REFERENCES REFDATA_SENSITIVITYFLAGS (SENSITIVITYFLAG_ID);

ALTER TABLE REFDATA_DATASTRUCTURES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE REFDATA_DEVICETYPES
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_INDUSTRYSTDS_EVENTTYPES
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_INDUSTRYSTDS_EVENTTYPES
    ADD FOREIGN KEY  (INDUSTRY_STD)
        REFERENCES REFDATA_INDUSTRYSTDS(INDUSTRY_STD);

ALTER TABLE REFDATA_INDUSTRIES
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_INDUSTRIES_BUSINESS
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_INDUSTRIES_BUSINESS
    ADD FOREIGN KEY  (INDUSTRY_ID)
        REFERENCES REFDATA_INDUSTRIES(INDUSTRY_ID);

ALTER TABLE REFDATA_INDUSTRYSTDS
    ADD FOREIGN KEY  (STATUS_ID)
        REFERENCES REFDATA_STATUS(STATUS_ID);

ALTER TABLE REFDATA_LEGALENTITIES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_LEGALENTITIES
    ADD FOREIGN KEY (STATE_ID)
        REFERENCES REFDATA_USSTATES (STATE_ID);

ALTER TABLE REFDATA_OPERATIONTYPES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_ORGANIZATIONS
    ADD FOREIGN KEY (LEGALENTITY_GUID)
        REFERENCES REFDATA_LEGALENTITIES (LEGALENTITY_GUID);

ALTER TABLE REFDATA_ORGANIZATIONS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_ORGANIZATIONS
    ADD FOREIGN KEY (STATE_ID)
        REFERENCES REFDATA_USSTATES (STATE_ID);

ALTER TABLE REFDATA_PROFESSIONTYPES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_RULESETS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_SENSITIVITYFLAGS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_TERMINOLOGYSTDS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_TIMEZONES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_USSTATES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE REFDATA_VENDORS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

-- DATA MODEL

DROP TABLE IF EXISTS DATAMODEL_APIS;
CREATE TABLE DATAMODEL_APIS
(
    API_ID             CHAR(38) DEFAULT NEWID(),
    TECHNOLOGY         VARCHAR(30),
    DATAATTRIBUTES_ID  CHAR(38),
    BASEURLLOCATION    VARCHAR(99),
    APINAME            VARCHAR(79),
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    PURPOSE            VARCHAR(49),
    DATMODEL_TABLENAME VARCHAR(99),
    APIPARAMS          VARCHAR(59),
    APIEXAMPLE         VARCHAR(149),
    PRIMARY KEY (API_ID)
);

ALTER TABLE DATAMODEL_APIS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS DATAMODEL_DOMAINS;
CREATE TABLE DATAMODEL_DOMAINS
(
    DOMAINNAME        VARCHAR(64) NOT NULL,
    DOMAININFORMATION VARCHAR(249),
    STATUS_ID        VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE      DATETIME DEFAULT (GETUTCDATE()),
    PRIMARY KEY (DOMAINNAME)
);
ALTER TABLE DATAMODEL_DOMAINS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS DATAMODEL_DATATABLES;
CREATE TABLE DATAMODEL_DATATABLES
(
    TABLENAME        VARCHAR(64) NOT NULL,
    TABLEINFORMATION VARCHAR(249),
    STATUS_ID        VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE     DATETIME DEFAULT (GETUTCDATE()),
    DATADOMAIN       VARCHAR(64),
    PRIMARY KEY (TABLENAME)
);

ALTER TABLE DATAMODEL_DATATABLES
    ADD FOREIGN KEY (DATADOMAIN)
        REFERENCES DATAMODEL_DOMAINS (DOMAINNAME);

ALTER TABLE DATAMODEL_DATATABLES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

-- DATATIER

DROP TABLE IF EXISTS DATATIER_CRAWLERS;
CREATE TABLE DATATIER_CRAWLERS
(
    DATACRAWLER_ID      INT IDENTITY(1,1) PRIMARY KEY,
    TOKEN               CHAR(128),
    CRAWLEDTEXT_DETAILS TEXT,
    CREATED_DATE        DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID           VARCHAR(10) DEFAULT 'ACTIVE',
    REGISTEREDAPP_GUID  CHAR(38),
    ORGANIZATION_GUID   CHAR(38)
);

ALTER TABLE DATATIER_CRAWLERS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE DATATIER_CRAWLERS
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE DATATIER_CRAWLERS
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

DROP TABLE IF EXISTS DATATIER_SDP_DATAATTRIBUTES;
CREATE TABLE DATATIER_SDP_DATAATTRIBUTES
(
    DATATIER_ID        INT IDENTITY(1,1) PRIMARY KEY,
    BASEVALUE          VARCHAR(99),
    SUPPORTINGVALUE1   VARCHAR(169),
    SUPPORTINGVALUE2   VARCHAR(50),
    SUPPORTINGVALUE3   VARCHAR(50),
    SUPPORTINGVALUE4   VARCHAR(50),
    SUPPORTINGVALUE5   VARCHAR(50),
    SUPPORTINGVALUE6   VARCHAR(50),
    SUPPORTINGVALUE7   VARCHAR(50),
    CREATED_DATE       DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    DATAATTRIBUTE_ID   CHAR(38),
    CREATED_USER        VARCHAR(20),
    REGISTEREDAPP_GUID CHAR(38),
    DATAGENTYPE_ID     INT
);

ALTER TABLE DATATIER_SDP_DATAATTRIBUTES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE DATATIER_SDP_DATAATTRIBUTES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE DATATIER_SDP_DATAATTRIBUTES
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES REFDATA_DATAATTRIBUTES (DATAATTRIBUTE_ID);

DROP TABLE IF EXISTS DATATIER_SDP_DATASTRUCTURES;
CREATE TABLE DATATIER_SDP_DATASTRUCTURES
(
    DATASTRUCTURE_CORE_ID INT IDENTITY(1,1) PRIMARY KEY,
    DATASTRUCTURE_NAME    VARCHAR(29),
    DATASTRUCTURE_DETAILS TEXT,
    CREATED_DATE          DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID             VARCHAR(10) DEFAULT 'ACTIVE',
    REGISTEREDAPP_GUID    CHAR(38)
);

ALTER TABLE DATATIER_SDP_DATASTRUCTURES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE DATATIER_SDP_DATASTRUCTURES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS DATATIER_TOKENS;
CREATE TABLE DATATIER_TOKENS
(
    DATATOKEN_ID       INT IDENTITY(1,1) PRIMARY KEY,
    TOKEN              CHAR(128),
    CREATED_DATE       DATETIME    DEFAULT (GETUTCDATE()),
    STATUS_ID          VARCHAR(10) DEFAULT 'ACTIVE',
    REGISTEREDAPP_GUID CHAR(38),
    ORGANIZATION_GUID  CHAR(38),
    INTFC_TYPE         VARCHAR(10) DEFAULT 'API',
    DATASOURCE_ID      CHAR(38)
);

ALTER TABLE DATATIER_TOKENS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE DATATIER_TOKENS
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE DATATIER_TOKENS
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

-- PLATFORM

DROP TABLE IF EXISTS PLATFORM_CODESETS;
CREATE TABLE PLATFORM_CODESETS
(
    CODESET_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    APPLICATION_GUID    CHAR(38),
    ORGANIZATION_GUID   CHAR(38),
    CODESETS_ID  CHAR(38),
    CREATED_DATE        DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID           VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER        VARCHAR(20),
    ORIGINALCODE_VALUE  VARCHAR(40),
    ORIGINALCODE_DESC   VARCHAR(40),
    PRIMARY KEY (CODESET_ID)
);

ALTER TABLE PLATFORM_CODESETS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE PLATFORM_CODESETS
    ADD FOREIGN KEY (CODESETS_ID)
        REFERENCES REFDATA_CODESETS (CODESETS_ID);

DROP TABLE IF EXISTS PLATFORM_CODESETS_INDUSTRYSTD;
CREATE TABLE PLATFORM_CODESETS_INDUSTRYSTD
(
    TERMCODESET_ID    CHAR(38) DEFAULT NEWID() NOT NULL,
    CREATED_DATE      DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID         VARCHAR(10) DEFAULT 'ACTIVE',
    CODE_VALUE        VARCHAR(20),
    CODE_DESC         VARCHAR(129),
    INDUSTRY_STD      VARCHAR(6),
    TERMINOLOGY_STD VARCHAR(25),
    PRIMARY KEY (TERMCODESET_ID)
);

ALTER TABLE PLATFORM_CODESETS_INDUSTRYSTD
    ADD FOREIGN KEY (TERMINOLOGY_STD)
        REFERENCES REFDATA_TERMINOLOGYSTDS (TERMINOLOGY_STD);

ALTER TABLE PLATFORM_CODESETS_INDUSTRYSTD
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS PLATFORM_CODESETS_XMAP;
CREATE TABLE PLATFORM_CODESETS_XMAP
(
    CODESETCROSSMAP_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    APPLICATION_GUID    CHAR(38),
    ORGANIZATION_GUID   CHAR(38),
    TERMINOLOGYSTD_FROM   VARCHAR(25),
    TERMINOLOGYSTD_TO   VARCHAR(25),
    CREATED_DATE        DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID           VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER        VARCHAR(20),
    TRANSFORMCODE_VALUE VARCHAR(40),
    TRANSFORMCODE_DESC  VARCHAR(129),
    ORIGINALCODE_VALUE  VARCHAR(40),
    ORIGINALCODE_DESC   VARCHAR(40),
    PRIMARY KEY (CODESETCROSSMAP_ID)
);

ALTER TABLE PLATFORM_CODESETS_XMAP
    ADD FOREIGN KEY (APPLICATION_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_CODESETS_XMAP
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_CODESETS_XMAP
    ADD FOREIGN KEY (TERMINOLOGYSTD_FROM)
        REFERENCES REFDATA_TERMINOLOGYSTDS (TERMINOLOGY_STD);

ALTER TABLE PLATFORM_CODESETS_XMAP
    ADD FOREIGN KEY (TERMINOLOGYSTD_TO)
        REFERENCES REFDATA_TERMINOLOGYSTDS (TERMINOLOGY_STD);

ALTER TABLE PLATFORM_CODESETS_XMAP
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS PLATFORM_DATAGENERATION_DATAATTRIBUTES;
CREATE TABLE PLATFORM_DATAGENERATION_DATAATTRIBUTES
(
    DATAGENTYPE_ID         CHAR(38) DEFAULT NEWID() NOT NULL,
    DATAGENTYPE_DESCRIPTION VARCHAR(65),
    DEFINITION             VARCHAR(255),
    DATAATTRIBUTE_ID       CHAR(38),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER            VARCHAR(20),
    QUANTITY               INT,
    MAXRECORDS_IN_SOURCE     INT,
    REGISTEREDAPP_GUID     CHAR(38),
    ORGANIZATION_GUID      CHAR(38),
    PRIMARY KEY (DATAGENTYPE_ID)
);


ALTER TABLE PLATFORM_DATAGENERATION_DATAATTRIBUTES
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES REFDATA_DATAATTRIBUTES (DATAATTRIBUTE_ID);

ALTER TABLE PLATFORM_DATAGENERATION_DATAATTRIBUTES
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_DATAGENERATION_DATAATTRIBUTES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_DATAGENERATION_DATAATTRIBUTES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS PLATFORM_DATABUILDING_DATAATTRIBUTES;
CREATE TABLE PLATFORM_DATABUILDING_DATAATTRIBUTES
(
    DATABUILD_DATAATTRIBUTE_ID        CHAR(38) DEFAULT NEWID() NOT NULL,
    DATABUILD_DESCRIPTION VARCHAR(65),
    DEFINITION             VARCHAR(255),
    DATAATTRIBUTE_ID       CHAR(38),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER            VARCHAR(20),
    QUANTITY               INT,
    MAXRECORDS_IN_SOURCE     INT,
    REGISTEREDAPP_GUID     CHAR(38),
    ORGANIZATION_GUID      CHAR(38),
    PARAM1  VARCHAR(30),
    PARAM1_OPERATOR VARCHAR(7),
    PARAM1_VALUE VARCHAR(65),
    PARAM2  VARCHAR(30),
    PARAM2_OPERATOR VARCHAR(7),
    PARAM2_VALUE VARCHAR(65),
    PARAM3  VARCHAR(30),
    PARAM3_OPERATOR VARCHAR(7),
    PARAM3_VALUE VARCHAR(65),
    PARAM4  VARCHAR(30),
    PARAM4_OPERATOR VARCHAR(7),
    PARAM4_VALUE VARCHAR(65),
    PRIMARY KEY (DATABUILD_DATAATTRIBUTE_ID)
);

ALTER TABLE PLATFORM_DATABUILDING_DATAATTRIBUTES
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES REFDATA_DATAATTRIBUTES (DATAATTRIBUTE_ID);

ALTER TABLE PLATFORM_DATABUILDING_DATAATTRIBUTES
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_DATABUILDING_DATAATTRIBUTES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_DATABUILDING_DATAATTRIBUTES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS PLATFORM_DATABUILDING_DATASTRUCTURES;
CREATE TABLE PLATFORM_DATABUILDING_DATASTRUCTURES
(
    DATABUILD_DATASTRUCTURES_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    DATABUILD_DESCRIPTION VARCHAR(65),
    DEFINITION             VARCHAR(255),
    DATASTRUCTURE_ID       CHAR(38),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER            VARCHAR(20),
    QUANTITY               INT,
    MAXRECORDS_IN_SOURCE     INT,
    REGISTEREDAPP_GUID     CHAR(38),
    ORGANIZATION_GUID      CHAR(38),
    PRIMARY KEY (DATABUILD_DATASTRUCTURES_ID)
);

ALTER TABLE PLATFORM_DATABUILDING_DATASTRUCTURES
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_DATABUILDING_DATASTRUCTURES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_DATABUILDING_DATASTRUCTURES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE PLATFORM_DATABUILDING_DATASTRUCTURES
    ADD FOREIGN KEY (DATASTRUCTURE_ID)
        REFERENCES  REFDATA_DATASTRUCTURES(DATASTRUCTURE_ID)

DROP TABLE IF EXISTS PLATFORM_DATASOURCES;
CREATE TABLE PLATFORM_DATASOURCES
(
    PLATFORM_DATASOURCES_ID CHAR(38) DEFAULT NEWID() NOT NULL,
    DATASOURCE_NAME        VARCHAR(50),
    DATASOURCE_TYPE        VARCHAR(10),
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER           VARCHAR(20) ,
    ORGANIZATION_GUID      CHAR(38),
    REGISTEREDAPP_GUID         CHAR(38),
    PRIMARY KEY (PLATFORM_DATASOURCES_ID)
);

ALTER TABLE PLATFORM_DATASOURCES
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_DATASOURCES
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_DATASOURCES
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);
-- ADDED TO ENSURE A REFERENCE TO IT OCCURS IN TABLE CREATED WELL BEFORE IN SCRIPT
ALTER TABLE DATATIER_TOKENS
    ADD FOREIGN KEY (DATASOURCE_ID)
        REFERENCES PLATFORM_DATASOURCES (PLATFORM_DATASOURCES_ID);

DROP TABLE IF EXISTS PLATFORM_DATASTRUCTURES_DTL;
CREATE TABLE PLATFORM_DATASTRUCTURES_DTL
(
    PLATFORM_DATASTRUCTURESDTL_ID    CHAR(38) DEFAULT NEWID() NOT NULL,
    DATASTRUCTURE_ID                     CHAR(38),
    COMPOSITE_DATASTRUCTURE_NAME                   VARCHAR(50),
    SENSITIVITYFLAG_ID                             VARCHAR(5),
    CREATED_DATE                                   DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID                                      VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER                                    VARCHAR(20),
    REGISTEREDAPP_GUID                             CHAR(38),
    DATAATTRIBUTE_ID                     CHAR(38),
    PRIMARY KEY (PLATFORM_DATASTRUCTURESDTL_ID)
);

ALTER TABLE PLATFORM_DATASTRUCTURES_DTL
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_DATASTRUCTURES_DTL
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

ALTER TABLE PLATFORM_DATASTRUCTURES_DTL
    ADD FOREIGN KEY (DATASTRUCTURE_ID)
        REFERENCES  REFDATA_DATASTRUCTURES(DATASTRUCTURE_ID);

ALTER TABLE PLATFORM_DATASTRUCTURES_DTL
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES  REFDATA_DATAATTRIBUTES(DATAATTRIBUTE_ID);

ALTER TABLE PLATFORM_DATASTRUCTURES_DTL
    ADD FOREIGN KEY (SENSITIVITYFLAG_ID)
        REFERENCES  REFDATA_SENSITIVITYFLAGS(SENSITIVITYFLAG_ID);

DROP TABLE IF EXISTS PLATFORM_RULESETS_DEFINITIONS;
CREATE TABLE PLATFORM_RULESETS_DEFINITIONS
(
    RULESETDEFINITIONS_ID  CHAR(38) DEFAULT NEWID() NOT NULL,
    RULESETDEFINITION_NAME VARCHAR(50),
    RULESET_ID             CHAR(38),
    STEPORDER_ID           INT,
    OPERATIONTYPE_ID       VARCHAR(7),
    RULESET_DEFVALUE       CHAR(40),
    STATUS_ID              VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_DATE           DATETIME DEFAULT (GETUTCDATE()),
    EFFECTIVE_DATE         DATETIME,
    APPLICATION_GUID       CHAR(38),
    TERM_DATE              DATETIME,
    DATAATTRIBUTE_ID       CHAR(38),
    PRIMARY KEY (RULESETDEFINITIONS_ID)
);

ALTER TABLE PLATFORM_RULESETS_DEFINITIONS
    ADD FOREIGN KEY (APPLICATION_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

ALTER TABLE PLATFORM_RULESETS_DEFINITIONS
    ADD FOREIGN KEY (RULESET_ID)
        REFERENCES REFDATA_RULESETS (RULE_ID);

ALTER TABLE PLATFORM_RULESETS_DEFINITIONS
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES REFDATA_DATAATTRIBUTES (DATAATTRIBUTE_ID);

ALTER TABLE PLATFORM_RULESETS_DEFINITIONS
    ADD FOREIGN KEY (OPERATIONTYPE_ID)
        REFERENCES REFDATA_OPERATIONTYPES (OPERATIONTYPE_ID);

ALTER TABLE PLATFORM_RULESETS_DEFINITIONS
    ADD FOREIGN KEY (STATUS_ID)
        REFERENCES REFDATA_STATUS (STATUS_ID);

DROP TABLE IF EXISTS PLATFORM_TOKENS_XMAPS;
CREATE TABLE PLATFORM_TOKENS_XMAPS
(
    PLATFORM_TOKENS_XMAP_ID CHAR(38) DEFAULT NEWID() NOT NULL,
    DATASTRUCTURE_ID           CHAR(38),
    XMAP_DETAILS                         VARCHAR(149),
    DATAATTRIBUTE_ID                     CHAR(38),
    FIELDORDER_ID                        INT      DEFAULT 1,
    CREATED_DATE                         DATETIME DEFAULT (GETUTCDATE()),
    STATUS_ID                            VARCHAR(10) DEFAULT 'ACTIVE',
    CREATED_USER                         VARCHAR(20),
    REGISTEREDAPP_GUID                   CHAR(38),
    ORGANIZATION_GUID                    CHAR(38),
    PRIMARY KEY (PLATFORM_TOKENS_XMAP_ID)
);

ALTER TABLE PLATFORM_TOKENS_XMAPS
    ADD FOREIGN KEY (DATASTRUCTURE_ID)
        REFERENCES  REFDATA_DATASTRUCTURES(DATASTRUCTURE_ID);

ALTER TABLE PLATFORM_TOKENS_XMAPS
    ADD FOREIGN KEY (DATAATTRIBUTE_ID)
        REFERENCES  REFDATA_DATAATTRIBUTES(DATAATTRIBUTE_ID);

ALTER TABLE PLATFORM_TOKENS_XMAPS
    ADD FOREIGN KEY (ORGANIZATION_GUID)
        REFERENCES REFDATA_ORGANIZATIONS (ORGANIZATION_GUID);

ALTER TABLE PLATFORM_TOKENS_XMAPS
    ADD FOREIGN KEY (REGISTEREDAPP_GUID)
        REFERENCES REFDATA_APPLICATIONS (APP_GUID);

-- INDEXES
DROP INDEX IF EXISTS DATATIER_SDP_DATAATTRIBUTES_INDEX ON DATATIER_SDP_DATAATTRIBUTES;
CREATE INDEX DATATIER_SDP_DATAATTRIBUTES_INDEX
    ON DATATIER_SDP_DATAATTRIBUTES (DATATIER_ID, BASEVALUE, SUPPORTINGVALUE1, SUPPORTINGVALUE2, SUPPORTINGVALUE3, SUPPORTINGVALUE4,
                                    SUPPORTINGVALUE5, SUPPORTINGVALUE6, SUPPORTINGVALUE7, CREATED_DATE, DATAATTRIBUTE_ID,
                                    DATAGENTYPE_ID, STATUS_ID, CREATED_USER, REGISTEREDAPP_GUID);

DROP INDEX IF EXISTS PLATFORM_CODESETS_INDUSTRYSTDS_INDEX ON PLATFORM_CODESETS_INDUSTRYSTDS;
CREATE INDEX PLATFORM_CODESETS_INDUSTRYSTDS_INDEX ON PLATFORM_CODESETS_INDUSTRYSTDS(INDUSTRY_STD, CREATED_DATE, STATUS_ID, CODE_VALUE, CODE_DESC);

DROP INDEX IF EXISTS PLATFORM_CODESETS_INDUSTRYSTDS_UINDEX ON PLATFORM_CODESETS_INDUSTRYSTDS;
CREATE UNIQUE INDEX PLATFORM_CODESETS_INDUSTRYSTDS_UINDEX ON PLATFORM_CODESETS_INDUSTRYSTDS(INDUSTRY_STD, CODE_VALUE, CODE_DESC);

DROP INDEX IF EXISTS DATATIER_CRAWLER_INDX ON DATATIER_CRAWLERS;
CREATE INDEX DATATIER_CRAWLER_INDX ON DATATIER_CRAWLERS
(
	DATACRAWLER_ID ASC,
	TOKEN ASC,
	CREATED_DATE ASC,
	STATUS_ID ASC,
	REGISTEREDAPP_GUID ASC,
	ORGANIZATION_GUID ASC
)

DROP INDEX IF EXISTS DATATIER_SDP_DATAATTRIBUTES_INDX ON DATATIER_SDP_DATAATTRIBUTES;
CREATE INDEX DATATIER_SDP_DATAATTRIBUTES_INDX ON DATATIER_SDP_DATAATTRIBUTES
(
    DATATIER_ID        ASC,
    BASEVALUE          ASC,
    SUPPORTINGVALUE1   ASC,
    SUPPORTINGVALUE2   ASC,
    SUPPORTINGVALUE3   ASC,
    SUPPORTINGVALUE4   ASC,
    SUPPORTINGVALUE5   ASC,
    SUPPORTINGVALUE6   ASC,
    SUPPORTINGVALUE7   ASC,
    CREATED_DATE       ASC,
    STATUS_ID          ASC,
    DATAATTRIBUTE_ID   ASC,
    CREATED_USER       ASC,
    REGISTEREDAPP_GUID ASC,
    DATAGENTYPE_ID     ASC
);

DROP INDEX IF EXISTS DATATIER_SDP_DATASTRUCTURES_INDX ON DATATIER_SDP_DATASTRUCTURES;
CREATE INDEX DATATIER_SDP_DATASTRUCTURES_INDEX ON DATATIER_SDP_DATASTRUCTURES
(
    DATASTRUCTURE_CORE_ID ASC,
    DATASTRUCTURE_NAME    ASC,
    CREATED_DATE          ASC,
    STATUS_ID             ASC,
    REGISTEREDAPP_GUID    ASC
);

DROP INDEX IF EXISTS DATATIER_TOKENS_INDX ON DATATIER_TOKENS;
CREATE INDEX DATATIER_TOKENS_INDEX ON DATATIER_TOKENS
(
    DATATOKEN_ID       ASC,
    TOKEN              ASC,
    CREATED_DATE       ASC,
    STATUS_ID          ASC,
    REGISTEREDAPP_GUID ASC,
    ORGANIZATION_GUID  ASC,
    INTFC_TYPE         ASC,
    DATASOURCE_ID      ASC
);

DROP INDEX IF EXISTS PLATFORM_CODESETS_INDUSTRYSTDS_INDX ON PLATFORM_CODESETS_INDUSTRYSTDS_INDX;
CREATE TABLE PLATFORM_CODESETS_INDUSTRYSTDS_INDX
(
    TERM_CODESET_ID ASC,
    CREATED_DATE    ASC,
    STATUS_ID       ASC,
    CUI             ASC,
    LAT             ASC,
    TS             ASC,
    LUI             ASC,
    STT             ASC,
    SUI             ASC,
    ISPREF          ASC,
    AUI             ASC,
    SAUI            ASC,
);

DROP INDEX IF EXISTS PLATFORM_CODESETS_INDUSTRYSTDS_INDX ON PLATFORM_CODESETS_INDUSTRYSTDS_INDX;
CREATE INDEX PLATFORM_CODESETS_INDUSTRYSTDS_INDX ON PLATFORM_CODESETS_INDUSTRYSTDS_INDX
(
    TERM_CODESET_ID ASC,
    CREATED_DATE    ASC,
    STATUS_ID       ASC,
    SCUI            ASC,
    SDUI            ASC,
    SAB             ASC,
    TTY             ASC,
    CODE            ASC,
    SRL             ASC,
    SUPPRESS       ASC,
    CVF             ASC,
);